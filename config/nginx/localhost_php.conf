    server {
        listen      80;
        server_name localhost 127.0.0.1;
        
        # Document root
        root        {{ nginx_webserver_html_path }}/localhost;
        index       index.php index.html;
        
        # Logging settings
        access_log  /var/log/nginx/localhost.access.log;
        error_log   /var/log/nginx/localhost.error.log; 

        # Default location: only allow local 
        location / {
           allow        127.0.0.1;
           allow        10.0.0.0/8;
           deny         all;
        }    

        # Endpoint for php-fpm-exporter metrics
        # Only allow access from localhost.
        location = /php_fpm_status {
            allow       127.0.0.1;
            allow       10.0.0.0/8;
            deny        all;

            include /etc/nginx/fastcgi_params;

            # Force to use a dumy file 
            fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html/index.php;  # dummy;
            fastcgi_param SCRIPT_NAME     /php_fpm_status;
            fastcgi_pass unix:/run/php/php-fpm.sock;
        }
        
        # Endpoint for nginx-prometheus-exporter metrics
        # Only allow access from localhost.
        location /stub_status {
            stub_status on;
            allow       127.0.0.1;
            allow       10.0.0.0/8;
            deny        all;
        }

    # -----------------------------------------------------------------------------
    # PHP-FPM handling
    # -----------------------------------------------------------------------------
    location ~ \.php(?:$|/) {

        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        set $path_info $fastcgi_path_info;

        try_files $fastcgi_script_name =404;      

        include       fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS on;
 
        # security
        fastcgi_param HTTP_PROXY "";                       # Mitigate https://httpoxy.org/ vulnerabilities        
        fastcgi_param modHeadersAvailable     true;        # Avoid sending the security headers twice                       
        fastcgi_param front_controller_active true;        # Enable pretty urls
        fastcgi_param HTTPS $https if_not_empty;              

        # Fix nginx errors readv() and recv() failed is quite simple - just deactivate fastcgi_keep_conn:
        fastcgi_keep_conn off;

        fastcgi_pass unix:/run/php/php-fpm.sock;
        
        fastcgi_intercept_errors  on;
        fastcgi_request_buffering off;

        # Tune buffers to avoid error
        # fastcgi_busy_buffers_size < (fastcgi_buffers[count] - 1) * fastcgi_buffers[size]     
        # fastcgi_busy_buffers_size >= max(fastcgi_buffer_size, fastcgi_buffers[size])
        # it is better to create more fastcgi_buffers of lesser size then small number of large fastcgi_buffers:
        fastcgi_buffers              256 32k;
        fastcgi_buffer_size          256k;
        fastcgi_busy_buffers_size    512k;
        fastcgi_temp_file_write_size 512k;

        fastcgi_read_timeout         3600;
        fastcgi_send_timeout         3600;
        fastcgi_connect_timeout      3600;

        fastcgi_max_temp_file_size   0;    # 0 means not be limited by Nginx

        # Silence status endpoint in logs
        if ($request_uri ~* "^/status\.php") {
            access_log off;
        }
    }
}